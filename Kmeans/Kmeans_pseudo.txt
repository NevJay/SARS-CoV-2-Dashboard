FROM SKLEARN.CLUSTER IMPORT KMeans

IMPORT PANDAS AS pd

FROM SKLEARN.METRICS IMPORT silhouette_score

FROM SKLEARN.PREPROCESSING IMPORT MinMaxScaler

FROM MATPLOTLIB IMPORT PYPLOT AS PLOT

FROM SKLEARN.PREPROCESSING IMPORT LabelEncoder



SET DataFrame TO pd.READ("output1.csv")

OUTPUT(DataFrame.DNAENC)

SET le TO LabelEncoder

SET DataFrame["Gene name"] TO le.FIT&TRANSFORM(DataFrame["Gene name"])

PLOT.SCATTER(DataFrame['Gene name'],DataFrame.DNAENC)

PLOT.XLABEL('Gene name')

PLOT.YLABEL('DNAENC')

#PLOT.SHOW()



SET km TO KMeans(n_clusters=3)

SET y_predicted TO km.FIT&PREDICT(DataFrame[['Gene name','DNAENC']])

y_predicted

DataFrame['cluster']=y_predicted

km.CLUSTER_CENTERS

SET score TO SILHOUETTE_SCORE(DataFrame[['Gene name','DNAENC']], km.LABELS_, METRIC='euclidean')

#

# Print the score

#

OUTPUT('Silhouetter Score:', score)

SET DataFrame1 TO DataFrame[DataFrame.cluster==0]

SET DataFrame2 TO DataFrame[DataFrame.cluster==1]

SET DataFrame3 TO DataFrame[DataFrame.cluster==2]

PLOT.SCATTER(DataFrame1['Gene name'],DataFrame1['DNAENC'], COLOR='green',LABEL='cluster1')

PLOT.SCATTER(DataFrame2['Gene name'],DataFrame2['DNAENC'], COLOR='red',LABEL='cluster2')

PLOT.SCATTER(DataFrame3['Gene name'],DataFrame3['DNAENC'], COLOR='yellow',LABEL='cluster3')

PLOT.SCATTER(km.cluster_centers_[:,0],km.cluster_centers_[:,1],COLOR='purple',MARKER='*',LABEL='centroid')

PLOT.XLABEL('Gene name')

PLOT.YLABEL('DNAENC')

PLOT.LEGEND()

PLOT.SHOW()

SET scaler TO MinMaxScaler



scaler.FIT(DataFrame[['DNAENC']])

SET DataFrame['DNAENC'] TO scaler.TRANSFORM(DataFrame[['DNAENC']])



scaler.FIT(DataFrame[['Gene name']])

SET DataFrame['Gene name'] TO scaler.TRANSFORM(DataFrame[['Gene name']])

PLOT.SCATTER(DataFrame['Gene name'],DataFrame['DNAENC'])

PLOT.SHOW()

SET sse TO []

SET k_rng TO RANGE(1,10)

FOR k IN k_rng:

    SET km TO KMeans(n_clusters=k)

    km.FIT(DataFrame[['Gene name','DNAENC']])

    sse.APPEND(km.inertia_)



PLOT.XLABEL('K')

PLOT.YLABEL('Sum of squared error')

PLOT.PLOT(k_rng,sse)

PLOT.SHOW()